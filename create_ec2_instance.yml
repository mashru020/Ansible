---
- name: Create AWS Infrastructure and Instances
  hosts: localhost
  gather_facts: no
  tasks:

    - name: Create a VPC
      amazon.aws.ec2_vpc:
        name: "ansible-vpc"
        cidr_block: "10.0.0.0/16"
        enable_dns_support: true
        enable_dns_hostnames: true
        region: "ap-southeast-1"  # Corrected region
        state: present
      register: vpc

    - name: Create a Subnet
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "10.0.1.0/24"
        availability_zone: "ap-southeast-1a"
        state: present
        region: "ap-southeast-1"
      register: subnet
  
    - name: Create an Internet Gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "ap-southeast-1"
        state: present
      register: igw

    - name: Get the Default Route Table
      amazon.aws.ec2_vpc_route_table_info:
        region: "ap-southeast-1"
        filters:
          vpc-id: "{{ vpc.vpc.id }}"
      register: route_table_info

    - name: Add Route to Internet Gateway
      amazon.aws.ec2_vpc_route_table:
        route_table_id: "{{ route_table_info.route_tables[0].id }}"
        region: "ap-southeast-1"
        routes:
          - dest: "0.0.0.0/0"
            gateway_id: "{{ igw.internet_gateway.id }}"
        state: present

    - name: Create a Security Group
      amazon.aws.ec2_security_group:
        name: "ansible-security-group"
        description: "Security group for Ubuntu instances"
        vpc_id: "{{ vpc.vpc.id }}"
        region: "ap-southeast-1"
        state: present
      register: sg

    - name: Add Ingress Rules to Security Group
      amazon.aws.ec2_security_group_rule:
        security_group_id: "{{ sg.group_id }}"
        region: "ap-southeast-1"
        inbound:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "0.0.0.0/0"
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: "0.0.0.0/0"

    - name: Launch 3 Ubuntu Instances
      amazon.aws.ec2_instance:
        name: "{{ item }}"
        key_name: "ansible-key"
        instance_type: "t2.micro"
        image_id: "{{ lookup('amazon.aws.ec2_ami_facts', aws_region='ap-southeast-1', filters={'name': 'ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*'}).images[0].image_id }}"
        region: "ap-southeast-1"
        vpc_subnet_id: "{{ subnet.subnet.id }}"
        security_group: "{{ sg.group_id }}"
      loop:
        - ansible-instance-1
        - ansible-instance-2
        - ansible-instance-3
      register: ec2

    - name: Display Instance Details
      debug:
        var: ec2.instances
